version: 2

seeds:
  - name: dept19_update_nouveau_pt
    description: >
      Affectation manuelle de nouveau comptages vers des lignes BdTopo dans le dept 19
      milléisme 2024.
      les champs id_ign et id_simpli sont exclusifs : si l'un est renseigné, l'autre doit être null ; 
      si plusieurs lignes sont concernées, elles doivent etre séparées par des ';'.
    data_tests:
      - dbt_utils.expression_is_true:
          arguments:
            expression: "(id_ign is not null and id_simpli is null) or (id_ign is null and id_simpli is not null)"
            description: "Vérifier que id_ign et id_simpli sont mutuellement exclusifs : si l'un est non null, l'autre doit être null."
    config:
      column_types:
        id_comptag: varchar(254)
        id_ign: text
        id_simpli: text
        src_cpt: varchar(254)
        coment_cpt: varchar(254)
        coment_tmj_f: varchar(254)
        obs_tmja: varchar(254)
        obs_pc_pl: varchar(254)
        obs_supl: varchar(254)
        id_sect: varchar(254)
        src_sect: varchar(254)
        autor_sect: varchar(254)
        obs_vts: varchar(254)
        id_cpt1: varchar(254)

    columns:
      - name: id_comptag
        description: "Identifiant du compteur"
        data_tests:
          - not_null
          - unique
          - relationships:
              arguments:
                to: source('cptg', 'compteur')
                field: id_comptag
                description: "Vérifier que chaque id_comptag dans ce fichier existe dans la table comptage.compteur."
      - name: id_ign
        description: "Identifiant IGN du(es) tronçon BdTopo linéarisé (séparation par ';' si plusieurs tronçons)"
      - name: id_simpli
        description: "Identifiant de section homogène interne OTR (séparation par ';' si plusieurs tronçons)"
      - name: src_cpt
        description: "source du comptage ; n'accepte que otv ou lin_bm"
        data_tests:
          - accepted_values:
              arguments:
                values: "{{ var('src_cpt_verif') }}"
      - name: coment_cpt
        description: "Commentaire sur le comptage (linearisation, estimation)"
        data_tests:
          - accepted_values:
              arguments:
                values: "{{ var('coment_cpt_verif') }}"
      - name: coment_tmj_f
        description: "Commentaire sur le mode de calcul (i.e divise ou multiplie et le facteur) du tmja et le nombre de ligne qui représente la route"
        data_tests:
          - accepted_values:
              arguments:
                values: "{{ var('coment_tmj_verif') }}"
      - name: obs_tmja
        description: "Observation sur le TMJA"
      - name: obs_pc_pl
        description: "Observation sur la part de PL"
      - name: obs_supl
        description: "Observation supplémentaire"
      - name: id_sect
        description: "Identifiant de section"
      - name: src_sect
        description: "Source de la section"
      - name: autor_sect
        description: "Auteur de la section"
      - name: obs_vts
        description: "Observation sur les vitesses"
      - name: id_cpt1
        description: "Attributs de travail sur les compteurs (calcul sur Bdx Metropole notamment)"

  - name: dept19_update_modif_linearisation
    description: >
      Modification manuelle de la linéarisation de comptages existants dans le dept 19
      millésime 2024 : affectation d'une partie du sectionnement à un autre point de comptage existant
      Les champs id_ign et id_simpli sont exclusifs : si l'un est renseigné, l'autre doit être null ; 
      si plusieurs lignes sont concernées, elles doivent être séparées par des ';'.
    data_tests:
      - dbt_utils.expression_is_true:
          arguments:
            expression: "(id_ign is not null and id_simpli is null) or (id_ign is null and id_simpli is not null)"
            description: "Vérifier que id_ign et id_simpli sont mutuellement exclusifs : si l'un est non null, l'autre doit être null."
    config:
      column_types:
        id_comptag: varchar(254)
        id_ign: text
        id_simpli: text

    columns:
      - name: id_comptag
        description: "Identifiant du nouveau compteur de référence pour les lignes concernées"
        data_tests:
          - not_null
          - unique
          - relationships:
              arguments:
                to: source('cptg', 'compteur')
                field: id_comptag
                description: "Vérifier que chaque id_comptag dans ce fichier existe dans la table comptage.compteur."
      - name: id_ign
        description: "Nouvel identifiant IGN du(es) tronçon BdTopo linéarisé (séparation par ';' si plusieurs tronçons)"
      - name: id_simpli
        description: "Nouvel identifiant de section homogène interne OTR (séparation par ';' si plusieurs tronçons)"

  - name: dept19_update_oubli_linearisation
    description: >
      Correction manuelle d'oublis de linéarisation de comptages existants dans le dept 19
      millésime 2024 : affectation de lignes BdTopo qui auraient dû être rattachées à un point de comptage existant
      mais qui ont été oubliées lors de la linéarisation initiale.
      Les champs id_ign et id_simpli sont exclusifs : si l'un est renseigné, l'autre doit être null ; 
      si plusieurs lignes sont concernées, elles doivent être séparées par des ';'.
    data_tests:
      - dbt_utils.expression_is_true:
          arguments:
            expression: "(id_ign is not null and id_simpli is null) or (id_ign is null and id_simpli is not null)"
            description: "Vérifier que id_ign et id_simpli sont mutuellement exclusifs : si l'un est non null, l'autre doit être null."
    config:
      column_types:
        id_comptag: varchar(254)
        id_ign: text
        id_simpli: text

    columns:
      - name: id_comptag
        description: "Identifiant du compteur de référence pour les lignes oubliées"
        data_tests:
          - not_null
          - unique
          - relationships:
              arguments:
                to: source('cptg', 'compteur')
                field: id_comptag
                description: "Vérifier que chaque id_comptag dans ce fichier existe dans la table comptage.compteur."
      - name: id_ign
        description: "Identifiant IGN du(es) tronçon BdTopo des lignes concernées (séparation par ';' si plusieurs tronçons)"
      - name: id_simpli
        description: "Identifiant de section homogène interne OTR des lignes concernées (séparation par ';' si plusieurs tronçons)"

  - name: dept19_update_etire_linearisation
    description: >
      Étirement de la linéarisation de comptages existants dans le dept 19
      millésime 2024 : extension de la linéarisation d'un point de comptage existant
      en y rattachant des lignes BdTopo supplémentaires.
      Les champs id_ign et id_simpli sont exclusifs : si l'un est renseigné, l'autre doit être null ; 
      si plusieurs lignes sont concernées, elles doivent être séparées par des ';'.
    data_tests:
      - dbt_utils.expression_is_true:
          arguments:
            expression: "(id_ign is not null and id_simpli is null) or (id_ign is null and id_simpli is not null)"
            description: "Vérifier que id_ign et id_simpli sont mutuellement exclusifs : si l'un est non null, l'autre doit être null."
    config:
      column_types:
        id_comptag: varchar(254)
        id_ign: text
        id_simpli: text

    columns:
      - name: id_comptag
        description: "Identifiant du compteur dont la linéarisation doit être étendue"
        data_tests:
          - not_null
          - unique
          - relationships:
              arguments:
                to: source('cptg', 'compteur')
                field: id_comptag
                description: "Vérifier que chaque id_comptag dans ce fichier existe dans la table comptage.compteur."
      - name: id_ign
        description: "Identifiant IGN du(es) tronçon BdTopo des lignes concernées (séparation par ';' si plusieurs tronçons)"
      - name: id_simpli
        description: "Identifiant de section homogène interne OTR des lignes concernées (séparation par ';' si plusieurs tronçons)"
